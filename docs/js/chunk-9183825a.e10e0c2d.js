(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-9183825a"],{"13d5":function(t,e,a){"use strict";var n=a("23e7"),c=a("d58f").left,i=a("a640"),s=a("ae40"),r=i("reduce"),u=s("reduce",{1:0});n({target:"Array",proto:!0,forced:!r||!u},{reduce:function(t){return c(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},"25ec":function(t,e,a){"use strict";a("988c")},"4edd":function(t,e,a){"use strict";a.r(e);var n=a("7a23"),c=Object(n["F"])("data-v-6a14f22c");Object(n["t"])("data-v-6a14f22c");var i=Object(n["h"])("h1",null,"新型コロナウイルス情報",-1),s={key:0,class:"flex"},r={class:"box"},u={class:"box"},o={class:"box"},d={class:"box"},l={class:"box"},h={class:"box27"},f=Object(n["h"])("span",{class:"box-title"},"病床使用数",-1),b={class:"text"},k=Object(n["h"])("br",null,null,-1),p={class:"ueo"},g={key:1,class:"loader"};Object(n["r"])();var j=c((function(t,e,a,c,j,O){var m=Object(n["x"])("mainmenu"),v=Object(n["x"])("labelbox");return Object(n["q"])(),Object(n["d"])("div",null,[Object(n["h"])(m,{judge:"0"}),i,O.readyToshowMainPage?(Object(n["q"])(),Object(n["d"])("div",s,[Object(n["h"])("div",r,[Object(n["h"])(v,{class:"box1",msg:"感染者数",idname:"kansen",infected:O.infected},null,8,["infected"])]),Object(n["h"])("div",u,[Object(n["h"])(v,{class:"box2",msg:"死者数",idname:"dead",infected:O.dead},null,8,["infected"])]),Object(n["h"])("div",o,[Object(n["h"])(v,{class:"box3",msg:"PCR検査数",idname:"pcr",infected:O.pcr},null,8,["infected"])]),Object(n["h"])("div",d,[Object(n["h"])(v,{class:"box4",msg:"退院者数",idname:"dischange",infected:O.discharge},null,8,["infected"])]),Object(n["h"])("div",l,[Object(n["h"])("div",h,[f,Object(n["h"])("input",{type:"radio",id:O.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(n["h"])("label",{for:O.zenkokuId,class:"tab-label"},"岡山",8,["for"]),Object(n["h"])("div",b,[Object(n["g"])(Object(n["z"])(O.use)+"/"+Object(n["z"])(O.all),1),k,Object(n["h"])("p",p,Object(n["z"])(O.update),1)])])])])):(Object(n["q"])(),Object(n["d"])("div",g))])})),O=a("b6d0");a("e336");O["a"].render=j,O["a"].__scopeId="data-v-6a14f22c";e["default"]=O["a"]},5899:function(t,e){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},"58a8":function(t,e,a){var n=a("1d80"),c=a("5899"),i="["+c+"]",s=RegExp("^"+i+i+"*"),r=RegExp(i+i+"*$"),u=function(t){return function(e){var a=String(n(e));return 1&t&&(a=a.replace(s,"")),2&t&&(a=a.replace(r,"")),a}};t.exports={start:u(1),end:u(2),trim:u(3)}},6949:function(t,e,a){},7156:function(t,e,a){var n=a("861d"),c=a("d2bb");t.exports=function(t,e,a){var i,s;return c&&"function"==typeof(i=e.constructor)&&i!==a&&n(s=i.prototype)&&s!==a.prototype&&c(t,s),t}},"988c":function(t,e,a){},a351:function(t,e,a){"use strict";var n=a("7a23"),c={class:"box27"},i={class:"box-title"},s={class:"text"},r=Object(n["h"])("br",null,null,-1),u={class:"ueo"},o={class:"text"},d=Object(n["h"])("br",null,null,-1),l={class:"ueo"},h={class:"text"},f=Object(n["h"])("br",null,null,-1),b={class:"ueo"};function k(t,e,a,k,p,g){return Object(n["q"])(),Object(n["d"])("form",null,[Object(n["h"])("div",c,[Object(n["h"])("span",i,Object(n["z"])(a.msg),1),Object(n["h"])("input",{type:"radio",id:g.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(n["h"])("label",{for:g.zenkokuId,class:"tab-label"},"全国",8,["for"]),Object(n["h"])("div",s,[Object(n["g"])(Object(n["z"])(a.infected.zenkoku),1),r,Object(n["h"])("p",u,Object(n["z"])(a.infected.data1),1)]),Object(n["h"])("input",{type:"radio",id:g.okayamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(n["h"])("label",{for:g.okayamaId,class:"tab-label"},"岡山",8,["for"]),Object(n["h"])("div",o,[Object(n["g"])(Object(n["z"])(a.infected.okayama),1),d,Object(n["h"])("p",l,Object(n["z"])(a.infected.data2),1)]),"感染者数"==a.msg?(Object(n["q"])(),Object(n["d"])("input",{key:0,type:"button",class:"aiu",value:"詳細",onClick:e[1]||(e[1]=function(e){return t.$router.push("/Detailspage")})})):Object(n["e"])("",!0),Object(n["h"])("input",{type:"radio",id:g.tsuyamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(n["h"])("label",{for:g.tsuyamaId,class:"tab-label"},"津山",8,["for"]),Object(n["h"])("div",h,[Object(n["g"])(Object(n["z"])(a.infected.tsuyama),1),f,Object(n["h"])("p",b,Object(n["z"])(a.infected.data3),1)]),"感染者数"==a.msg?(Object(n["q"])(),Object(n["d"])("input",{key:1,type:"button",class:"aiu",value:"詳細",onClick:e[2]||(e[2]=function(e){return t.$router.push("/Detailspage_tsuyama")})})):Object(n["e"])("",!0)])])}var p={name:"labelbox",computed:{zenkokuId:function(){return this.idname+"zenkoku"},okayamaId:function(){return this.idname+"okayama"},tsuyamaId:function(){return this.idname+"tsuyama"}},props:{msg:{type:String},idname:{type:String},infected:{type:Object}}};a("25ec");p.render=k;e["a"]=p},a9e3:function(t,e,a){"use strict";var n=a("83ab"),c=a("da84"),i=a("94ca"),s=a("6eeb"),r=a("5135"),u=a("c6b6"),o=a("7156"),d=a("c04e"),l=a("d039"),h=a("7c73"),f=a("241c").f,b=a("06cf").f,k=a("9bf2").f,p=a("58a8").trim,g="Number",j=c[g],O=j.prototype,m=u(h(O))==g,v=function(t){var e,a,n,c,i,s,r,u,o=d(t,!1);if("string"==typeof o&&o.length>2)if(o=p(o),e=o.charCodeAt(0),43===e||45===e){if(a=o.charCodeAt(2),88===a||120===a)return NaN}else if(48===e){switch(o.charCodeAt(1)){case 66:case 98:n=2,c=49;break;case 79:case 111:n=8,c=55;break;default:return+o}for(i=o.slice(2),s=i.length,r=0;r<s;r++)if(u=i.charCodeAt(r),u<48||u>c)return NaN;return parseInt(i,n)}return+o};if(i(g,!j(" 0o1")||!j("0b1")||j("+0x1"))){for(var y,I=function(t){var e=arguments.length<1?0:t,a=this;return a instanceof I&&(m?l((function(){O.valueOf.call(a)})):u(a)!=g)?o(new j(v(e)),a,I):v(e)},w=n?f(j):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),D=0;w.length>D;D++)r(j,y=w[D])&&!r(I,y)&&k(I,y,b(j,y));I.prototype=O,O.constructor=I,s(c,g,I)}},b6d0:function(t,e,a){"use strict";(function(t){a("4de4"),a("13d5"),a("a9e3"),a("dca8"),a("ac1f"),a("5319"),a("1276");var n=a("a351"),c=a("ad3a"),i=a("bc3a"),s=a.n(i),r=a("4bb4"),u=a("10bf"),o=a.n(u);e["a"]={name:"Mainpage",components:{labelbox:n["a"],mainmenu:c["a"]},computed:{readyToshowMainPage:function(){return this.kenDetails.length>0&&this.kenUtiwake.length>0&&this.kenPcr.length>0&&this.kenDead.length>0&&this.kenIryou.length>0&&this.Zenkoku.length>0},zenkokuId:function(){return"zenkoku"},use:function(){return Number(this.kenDead[this.kenDead.length-1]["患者_入院中_入院予定含む"])+Number(this.kenDead[this.kenDead.length-1]["患者_宿泊療養施設に入所中"])},all:function(){return Number(this.kenIryou[this.kenIryou.length-1]["確保数_病床"])+Number(this.kenIryou[this.kenIryou.length-1]["確保数_宿泊療養施設"])},update:function(){for(var t=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/"),e=1;e<3;e++)1==t[e].length&&(t[e]="0"+t[e]);var a="※"+t[0]+"年"+t[1]+"月"+t[2]+"日時点";return a},infected:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["npatients"]}),0),e=this.kenUtiwake[this.kenUtiwake.length-1]["公表年月日"].replace("年","/");e=e.replace("月","/"),e=e.replace("日","/"),e=e.split("/");for(var a=1;a<3;a++)1==e[a].length&&(e[a]="0"+e[a]);var n="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",c=this.last.split("-");return c="※"+c[0]+"年"+c[1]+"月"+c[2]+"日時点",{zenkoku:t+"人",okayama:this.kenUtiwake.length+"人",tsuyama:this.kenUtiwake.filter((function(t){if("津山市"==t.患者＿居住地)return!0})).length+"人",data1:c,data2:n,data3:n}},pcr:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["ninspections"]}),0),e=this.kenPcr.filter((function(t){if(""!=t.集計時点_年月日)return!0})),a=e[e.length-1].集計時点_年月日.split("/");1==a[2].length&&(a[2]="0"+a[2]);var n="※"+a[0]+"年"+a[1]+"月"+a[2]+"日時点",c=this.last.split("-");return c="※"+c[0]+"年"+c[1]+"月"+c[2]+"日時点",{zenkoku:t+"人",okayama:this.kenPcr.reduce((function(t,e){return t+Number(e["検査実施人数"])}),0)+"人",tsuyama:"No data",data1:c,data2:n,data3:""}},dead:function(){for(var t=this.Zenkoku.reduce((function(t,e){return t+e["ndeaths"]}),0),e=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/"),a=1;a<3;a++)1==e[a].length&&(e[a]="0"+e[a]);var n="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",c=this.last.split("-");return c="※"+c[0]+"年"+c[1]+"月"+c[2]+"日時点",{zenkoku:t+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_死亡"]+"人",tsuyama:"No data",data1:c,data2:n,data3:""}},discharge:function(){for(var t=this.Zenkoku.reduce((function(t,e){return t+e["nexits"]}),0),e=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/"),a=1;a<3;a++)1==e[a].length&&(e[a]="0"+e[a]);var n="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",c=this.last.split("-");return c="※"+c[0]+"年"+c[1]+"月"+c[2]+"日時点",{zenkoku:t+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_退院等"]+"人",tsuyama:"No data",data1:c,data2:n,data3:""}}},data:function(){return{kenDetails:[],kenUtiwake:[],kenPcr:[],kenDead:[],kenIryou:[],Zenkoku:[],last:[]}},mounted:function(){this.get_csv("https://tsuyama-craft.github.io/covid-19/data/kansenshasuu0420.csv",!0,"SJIS","UNICODE",this.setKenDetails),this.get_csv("https://tsuyama-craft.github.io/covid-19/data/pcr.csv",!0,"UTF8","UNICODE",this.setKenPcr),this.get_csv("https://tsuyama-craft.github.io/covid-19/data/kansenshashousaijouhou.csv",!0,"SJIS","UNICODE",this.setKenUchiwake),this.get_csv("https://tsuyama-craft.github.io/covid-19/data/kanjahasseijoukyou.csv",!0,"UTF8","UNICODE",this.setKenDead),this.get_csv("https://tsuyama-craft.github.io/covid-19/data/330001okayamacovid19medicalsystem.csv",!0,"UTF8","UNICODE",this.setKenIryou),this.get_csv("https://www.stopcovid19.jp/data/covid19japan.csv",!0,"UTF8","UNICODE",this.setZenkoku),this.lastupdata()},methods:{lastupdata:function(){var t=this;s.a.get("https://www.stopcovid19.jp/data/covid19japan.json").then((function(e){t.last=e.data["lastUpdate"]})).catch((function(t){return console.log(t)}))},setKenUchiwake:function(t){this.kenUtiwake=t,this.$store.commit("Enter2",this.kenUtiwake)},setKenPcr:function(t){this.kenPcr=t},setKenDead:function(t){this.kenDead=t},setKenIryou:function(t){this.kenIryou=t},setZenkoku:function(t){this.Zenkoku=t},setKenDetails:function(t){this.kenDetails=t,this.$store.commit("Enter",this.kenDetails)},get_csv:function(e,a,n,c,i){s.a.get(e,{responseType:"arraybuffer"}).then((function(e){var s=t.from(e.data),u=o.a.convert(s,{from:n,to:c,type:"string"});u=u.replace(/^\ufeff/,""),Object(r["parse"])(u,{columns:a,quote:'"',ltrim:!0,rtrim:!0,delimiter:",",cast:!0},(function(t,e){i(Object.freeze(e))}))})).catch((function(t){return console.log(t)}))}}}}).call(this,a("b639").Buffer)},d58f:function(t,e,a){var n=a("1c0b"),c=a("7b0b"),i=a("44ad"),s=a("50c4"),r=function(t){return function(e,a,r,u){n(a);var o=c(e),d=i(o),l=s(o.length),h=t?l-1:0,f=t?-1:1;if(r<2)while(1){if(h in d){u=d[h],h+=f;break}if(h+=f,t?h<0:l<=h)throw TypeError("Reduce of empty array with no initial value")}for(;t?h>=0:l>h;h+=f)h in d&&(u=a(u,d[h],h,o));return u}};t.exports={left:r(!1),right:r(!0)}},e336:function(t,e,a){"use strict";a("6949")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,